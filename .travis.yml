language: java
before_install:
# download jython to use the python scripts for checkstyle
- wget http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar -O jython-standalone-2.7.0.jar
# add eishub/tygron to remote as upstream
- git remote add upstream https://github.com/eishub/tygron.git
- git fetch upstream
install: 
- mvn -pl "!doc" install -DskipTests=true -Dmaven.javadoc.skip=true -Dcobertura.skip -B -V 
script:
# add login credentials in registry
- java -cp environment/target/tygronenv-*-jar-with-dependencies.jar login.Login $email $password
# test the code
- mvn test -Dcobertura.skip
# get the latest commit of legacy contributers on branch
# take the latest commit of the legacy contributors
# that have done work on commits of the current branch and put this in
# a text file with the UTC date and the commit hash
- while read name;do echo $(git log --author="$(echo $name | sed 's/\\r//g')" upstream/context..HEAD --format="%ct %H" | head -1) >> latestcommits.txt ; done < legacycoders.cfg
# take the latest commit and get the second value, which is the commit hash
# this commit hash is put in the variable TAIL, we use a python script to get_second_entry the second value of the space separeted string, then
# test checkstyle only on changed lines using this python script
- git diff $(java -jar jython-standalone-2.7.0.jar get_second_entry.py $(sort latestcommits.txt -r | head -1))...HEAD -U0 -- *.java --minimal | java -jar jython-standalone-2.7.0.jar checkstylediff.py
# checkstyle check is configured with these arguments
- mvn checkstyle:check -Dcheckstyle.config.location="$TRAVIS_BUILD_DIR/sun_checks_custom.xml" -Dcheckstyle.suppressions.location="$TRAVIS_BUILD_DIR/suppressions.xml" -Dcheckstyle.suppressions.file.expression=checkstyle.suppression.file
#check pmd and checkstyle only for environment
- cd environment
- mvn pmd:pmd
- mvn findbugs:findbugs
- cd target
- echo "*PMD-Results*" && cat "java-basic.xml" && cat "java-imports.xml" && cat "java-unusedcode.xml" && echo "PMD-Results END"
- echo "*FINDBUGS-Results*" && cat "findbugsXml.xml" && echo "FINDBUGS-Results END"
- cd ..
# run cobertura only in environment build fails when coverage is too low
- mvn cobertura:check
jdk:
- oraclejdk8

notifications:
  slack: $slack_token
